trigger:
  - master

jobs:

  - job: 'vs2015_clang_release'
    pool:
      # NOTE: this is the same image currently used by conda.
      # Like conda, we'll be using vs2015, not vs2017. If we
      # try to use the vs2015 image, we get some DLL errors
      # related to dbgeng, which *I think* are due to the
      # fact that the vs2015 image is using an older version of
      # the OS.
      vmImage: 'vs2017-win2016'
    timeoutInMinutes: 360
    steps:

      # Install Chocolatey (https://chocolatey.org/install#install-with-powershellexe)
      - powershell: |
          Set-ExecutionPolicy Bypass -Scope Process -Force
          iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
          Write-Host "##vso[task.setvariable variable=PATH]$env:PATH"
          choco --version
        displayName: "Install Chocolatey"

      # Install Miniconda
      - script: |
          choco install miniconda3 --yes
          set PATH=C:\tools\miniconda3\Scripts;C:\tools\miniconda3;C:\tools\miniconda3\Library\bin;%PATH%
          echo '##vso[task.setvariable variable=PATH]%PATH%'
          set LIB=C:\tools\miniconda3\Library\lib;%LIB%
          echo '##vso[task.setvariable variable=LIB]%LIB%'
          conda --version
        displayName: "Install Miniconda"

      # Configure Miniconda
      - script: |
          conda config --set always_yes yes
          conda config --add channels conda-forge
          conda config --set channel_priority strict
          conda info
        displayName: "Configure Miniconda"

      # Create conda enviroment
      # Note: conda activate doesn't work here, because it creates a new shell!
      - script: |
          conda install cmake ^
                        ninja ^
                        boost-cpp ^
                        boost ^
                        matplotlib ^
                        python=3.8
          conda list
        displayName: "Install conda packages"

      # Configure, build and test.
      - script: |
          setlocal EnableDelayedExpansion
          call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x86_amd64
          mkdir build
          cd build
          cmake .. -G "Visual Studio 16 2019" ^
                -DCMAKE_BUILD_TYPE=Release ^
                -DBoost_NO_BOOST_CMAKE=ON ^
                -DCMAKE_PREFIX_PATH=C:\tools\miniconda3\Library ^
                -DCMAKE_INSTALL_PREFIX=C:\tools\miniconda3\Library ^
                -DPYKEP_BUILD_KEP_TOOLBOX=yes ^
                -DPYKEP_BUILD_PYKEP=no ^
                -DPYKEP_BUILD_SPICE=yes ^
                -DPYKEP_BUILD_TESTS=yes
          cmake --build . -- -v
          cmake --build . --target install
          ctest -V .

          cd ..
          mkdir build_pykep
          cd build_pykep
          cmake .. -G "Visual Studio 16 2019" ^
                -DCMAKE_BUILD_TYPE=Release ^
                -DBoost_NO_BOOST_CMAKE=ON ^
                -DCMAKE_PREFIX_PATH=C:\tools\miniconda3\Library ^
                -DCMAKE_INSTALL_PREFIX=C:\tools\miniconda3\Library ^
                -DPYKEP_BUILD_KEP_TOOLBOX=no ^
                -DPYKEP_BUILD_PYKEP=yes ^
                -DPYKEP_BUILD_SPICE=yes
          cmake --build . -- -v
          cmake --build . --target install
          python -c "import pykep.test; pykep.test.run_test_suite()"
        displayName: "Configure, build and test"
